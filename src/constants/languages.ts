export type Language = 'en' | 'vi';

export interface Translations {
  // Header
  appTitle: string;
  
  // Mode Selection
  modeSelectionTitle: string;
  promptBetter: string;
  promptBetterDesc: string;
  askBetter: string;
  askBetterDesc: string;
  codingMode: string;
  codingModeDesc: string;
  marketing101: string;
  marketing101Desc: string;
  
  // Tone Options
  neutral: string;
  formal: string;
  casual: string;
  friendly: string;
  assertive: string;
  conciseTone: string;
  
  // Common UI
  loading: string;
  error: string;
  reset: string;
  submit: string;
  send: string;
  startNew: string;
  
  // Placeholders
  promptBetterPlaceholder: string;
  askBetterPlaceholder: string;
  codingModePlaceholder: string;
  marketing101Placeholder: string;
  
  // Language Selector
  selectLanguage: string;
  english: string;
  vietnamese: string;
}

export const translations: Record<Language, Translations> = {
  en: {
    // Header
    appTitle: 'Ask Better',
    
    // Mode Selection
    modeSelectionTitle: 'Choose Your Mode',
    promptBetter: 'üöÄ Prompt Better',
    promptBetterDesc: 'Get help writing better prompts for AI tools (like ChatGPT, image generators, etc.)',
    askBetter: 'üí¨ Ask Better',
    askBetterDesc: 'Get help asking clear, effective questions for any situation.',
    codingMode: 'üíª Coding Mode',
    codingModeDesc: 'Get help writing or improving your coding questions and prompts.',
    marketing101: 'üìà Marketing 101',
    marketing101Desc: 'Get help crafting marketing questions, ideas, or strategies.',
    
    // Tone Options
    neutral: 'Neutral',
    formal: 'Formal',
    casual: 'Casual',
    friendly: 'Friendly',
    assertive: 'Assertive',
    conciseTone: 'Concise (Tone)',
    
    // Common UI
    loading: 'Loading...',
    error: 'Error',
    reset: 'Reset',
    submit: 'Submit',
    send: 'Send',
    startNew: 'Start New',
    
    // Placeholders
    promptBetterPlaceholder: 'e.g., Generate a story about a friendly robot learning to paint...',
    askBetterPlaceholder: 'e.g., Ask my manager for feedback on the recent X project...',
    codingModePlaceholder: 'e.g., Help me debug a Python script for data analysis that gives a KeyError...',
    marketing101Placeholder: 'e.g., Brainstorm taglines for a new eco-friendly cleaning product targeting millennials...',
    
    // Language Selector
    selectLanguage: 'Select Language',
    english: 'English',
    vietnamese: 'Ti·∫øng Vi·ªát',
  },
  vi: {
    // Header
    appTitle: 'H·ªèi T·ªët H∆°n',
    
    // Mode Selection
    modeSelectionTitle: 'Ch·ªçn Ch·∫ø ƒê·ªô',
    promptBetter: 'üöÄ Prompt T·ªët H∆°n',
    promptBetterDesc: 'Nh·∫≠n tr·ª£ gi√∫p vi·∫øt prompt t·ªët h∆°n cho c√°c c√¥ng c·ª• AI (nh∆∞ ChatGPT, t·∫°o h√¨nh ·∫£nh, v.v.)',
    askBetter: 'üí¨ H·ªèi T·ªët H∆°n',
    askBetterDesc: 'Nh·∫≠n tr·ª£ gi√∫p ƒë·∫∑t c√¢u h·ªèi r√µ r√†ng, hi·ªáu qu·∫£ cho m·ªçi t√¨nh hu·ªëng.',
    codingMode: 'üíª Ch·∫ø ƒê·ªô L·∫≠p Tr√¨nh',
    codingModeDesc: 'Nh·∫≠n tr·ª£ gi√∫p vi·∫øt ho·∫∑c c·∫£i thi·ªán c√¢u h·ªèi v√† prompt l·∫≠p tr√¨nh.',
    marketing101: 'üìà Marketing C∆° B·∫£n',
    marketing101Desc: 'Nh·∫≠n tr·ª£ gi√∫p t·∫°o c√¢u h·ªèi, √Ω t∆∞·ªüng ho·∫∑c chi·∫øn l∆∞·ª£c marketing.',
    
    // Tone Options
    neutral: 'Trung T√≠nh',
    formal: 'Trang Tr·ªçng',
    casual: 'Th√¢n M·∫≠t',
    friendly: 'Th√¢n Thi·ªán',
    assertive: 'Quy·∫øt ƒêo√°n',
    conciseTone: 'Ng·∫Øn G·ªçn',
    
    // Common UI
    loading: 'ƒêang t·∫£i...',
    error: 'L·ªói',
    reset: 'ƒê·∫∑t L·∫°i',
    submit: 'G·ª≠i',
    send: 'G·ª≠i',
    startNew: 'B·∫Øt ƒê·∫ßu M·ªõi',
    
    // Placeholders
    promptBetterPlaceholder: 'v√≠ d·ª•: T·∫°o m·ªôt c√¢u chuy·ªán v·ªÅ robot th√¢n thi·ªán h·ªçc v·∫Ω tranh...',
    askBetterPlaceholder: 'v√≠ d·ª•: H·ªèi qu·∫£n l√Ω ph·∫£n h·ªìi v·ªÅ d·ª± √°n X g·∫ßn ƒë√¢y...',
    codingModePlaceholder: 'v√≠ d·ª•: Gi√∫p t√¥i debug script Python ph√¢n t√≠ch d·ªØ li·ªáu b·ªã l·ªói KeyError...',
    marketing101Placeholder: 'v√≠ d·ª•: Brainstorm slogan cho s·∫£n ph·∫©m t·∫©y r·ª≠a th√¢n thi·ªán m√¥i tr∆∞·ªùng h∆∞·ªõng ƒë·∫øn millennials...',
    
    // Language Selector
    selectLanguage: 'Ch·ªçn Ng√¥n Ng·ªØ',
    english: 'English',
    vietnamese: 'Ti·∫øng Vi·ªát',
  },
};

export const SUPPORTED_LANGUAGES: { code: Language; name: string; flag: string }[] = [
  { code: 'en', name: 'English', flag: 'üá∫üá∏' },
  { code: 'vi', name: 'Ti·∫øng Vi·ªát', flag: 'üáªüá≥' },
]; 