import React from 'react';
import { Button } from '../ui';
import { MODES } from '../../constants';
import { useAuth } from '../../hooks/useAuth';
import { useLanguage } from '../../contexts/LanguageContext';

interface ModeSelectionProps {
  onModeSelect: (modeId: string) => void;
  onTitleClick?: () => void;
}

export const ModeSelection: React.FC<ModeSelectionProps> = ({ onModeSelect, onTitleClick }) => {
  const { user } = useAuth();
  const { t, language } = useLanguage();

  // Create a mapping of mode IDs to translation keys
  const getModeTranslations = (modeId: string) => {
    switch (modeId) {
      case 'PROMPT_BETTER':
        return { displayName: t.promptBetter, description: t.promptBetterDesc };
      case 'ASK_BETTER':
        return { displayName: t.askBetter, description: t.askBetterDesc };
      case 'CODING_MODE':
        return { displayName: t.codingMode, description: t.codingModeDesc };
      case 'MARKETING_101':
        return { displayName: t.marketing101, description: t.marketing101Desc };
      default:
        return { displayName: '', description: '' };
    }
  };

  return (
    <div className="mode-selector">
      {/* Application Introduction */}
      <div className="app-introduction">
        <h1 
          className="app-title"
          style={{ 
            cursor: onTitleClick ? 'pointer' : 'default',
            transition: 'color 0.2s ease'
          }}
          onClick={onTitleClick}
          onMouseEnter={(e) => {
            if (onTitleClick) {
              e.currentTarget.style.color = '#4A2F6C';
            }
          }}
          onMouseLeave={(e) => {
            if (onTitleClick) {
              e.currentTarget.style.color = '#2F1B41';
            }
          }}
        >
          {t.appTitle}
        </h1>
        <p className="app-subtitle">
          {language === 'vi' 
            ? 'Bi·∫øn √Ω t∆∞·ªüng c·ªßa b·∫°n th√†nh giao ti·∫øp r√µ r√†ng v√† hi·ªáu qu·∫£'
            : 'Transform your ideas into clear, effective communication'
          }
        </p>
        
        <div className="intro-content">
          <p className="intro-description">
            {language === 'vi' 
              ? 'D√π b·∫°n ƒëang t·∫°o prompt cho AI, ƒë·∫∑t c√¢u h·ªèi v·ªõi ƒë·ªìng nghi·ªáp, debug code, hay ph√°t tri·ªÉn chi·∫øn l∆∞·ª£c marketing, Ask Better gi√∫p b·∫°n giao ti·∫øp r√µ r√†ng v√† ch√≠nh x√°c.'
              : 'Whether you\'re crafting prompts for AI, asking questions to colleagues, debugging code, or developing marketing strategies, Ask Better helps you communicate with clarity and precision.'
            }
          </p>
          
          <div className="how-it-works">
            <h3>
              {language === 'vi' ? 'C√°ch ho·∫°t ƒë·ªông:' : 'How it works:'}
            </h3>
            <ol className="steps-list">
              <li>
                <strong>
                  {language === 'vi' ? 'Ch·ªçn ch·∫ø ƒë·ªô' : 'Choose your mode'}
                </strong> - {language === 'vi' 
                  ? 'Ch·ªçn lo·∫°i giao ti·∫øp b·∫°n mu·ªën c·∫£i thi·ªán'
                  : 'Select the type of communication you want to improve'
                }
              </li>
              <li>
                <strong>
                  {language === 'vi' ? 'Chia s·∫ª √Ω t∆∞·ªüng' : 'Share your idea'}
                </strong> - {language === 'vi' 
                  ? 'Cho ch√∫ng t√¥i bi·∫øt b·∫°n mu·ªën truy·ªÅn ƒë·∫°t ƒëi·ªÅu g√¨'
                  : 'Tell us what you want to communicate'
                }
              </li>
              <li>
                <strong>
                  {language === 'vi' ? 'Nh·∫≠n phi√™n b·∫£n c·∫£i ti·∫øn' : 'Get refined versions'}
                </strong> - {language === 'vi' 
                  ? 'Nh·∫≠n c√°c phi√™n b·∫£n ƒë∆∞·ª£c ch·ªânh s·ª≠a, hi·ªáu qu·∫£'
                  : 'Receive polished, effective alternatives'
                }
              </li>
            </ol>
          </div>
          
          <div className="benefits">
            <p className="benefits-text">
              {language === 'vi' ? (
                <>
                  üí° <strong>Ti·∫øt ki·ªám th·ªùi gian</strong> b·∫±ng c√°ch truy·ªÅn ƒë·∫°t ƒë√∫ng ngay l·∫ßn ƒë·∫ßu<br/>
                  üéØ <strong>C·∫£i thi·ªán ƒë·ªô r√µ r√†ng</strong> v√† gi·∫£m hi·ªÉu l·∫ßm<br/>
                  üöÄ <strong>TƒÉng hi·ªáu qu·∫£</strong> trong m·ªçi giao ti·∫øp
                </>
              ) : (
                <>
                  üí° <strong>Save time</strong> by getting your message right the first time<br/>
                  üéØ <strong>Improve clarity</strong> and reduce misunderstandings<br/>
                  üöÄ <strong>Boost effectiveness</strong> in all your communications
                </>
              )}
            </p>
          </div>
        </div>
      </div>

      <h2 className="section-title">
        {user 
          ? (language === 'vi' 
              ? `Xin ch√†o ${user.name || user.email}, vui l√≤ng ch·ªçn ch·∫ø ƒë·ªô b·∫°n mu·ªën s·ª≠ d·ª•ng`
              : `Hey ${user.name || user.email}, please choose the mode you want to use`
            )
          : t.modeSelectionTitle
        }
      </h2>
      <div className="mode-buttons-container">
        {Object.values(MODES).map(mode => {
          const translations = getModeTranslations(mode.id);
          return (
            <Button 
              key={mode.id}
              className="mode-button"
              onClick={() => onModeSelect(mode.id)}
              variant="secondary"
            >
              <div className="mode-display-name">{translations.displayName}</div>
              <div className="mode-description">{translations.description}</div>
            </Button>
          );
        })}
      </div>
    </div>
  );
};
